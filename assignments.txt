Date : 22 April 2023
1. Write a JavaScript function that accepts a string as a parameter and finds the longest word within the string.
2. Write a JavaScript function that accepts a number as a parameter and checks whether it is prime or not.
3. Write a JavaScript function that takes an array of numbers and finds the second lowest and second greatest numbers, respectively
4. Write a JavaScript function to extract unique characters from a string.
5. Write a JavaScript function to find the first not repeated character.
6. Write a JavaScript program to pass a 'JavaScript function' as a parameter.
7. Write a JavaScript function to get the function name.





// Everyday practice to get better at PROGRAMMING
1. Understand the code flow. In what sequence the code will be executed.
2. start from step 1 and predict/write down the output

// Statements
1. Write a function which returns another function
2. Create a JS object which has variables and functions
    a. There should be at least 1 arrow function and 1 normal function
    b. (Intermediate) The normal function should contain at least 1 arrow function and 1 normal function inside it
3. Write a function 'add' which takes 2 arguments and returns the sum of the 2 numbers.
4. Write a function 'calculate' that takes an input a operation (+,-,*,/), which returns another function as per operation argument.



// Task queue and cloasures example

// Understand Array destructuring in 1 level JSON and nested JSON objects
// 


// call APply bind Practice steps
// 1. create some person obj with firstname, lastname and printDetails function
//          Remember to use 'this' in your function
// 2. Create another person obj, and try to borrow the function from person1
// 3. Use call and apply methods on person obj
// 4. Introduce at least 2 arguments to your printDetails function.
// 5. Pass these arguments through call, apply methods
// 6. Now use bind to create copies of function (with some context)


// Protptype
// 1. Check the prototype chain of each Array, function and object types
// 2. Create an object and try to point its prototype to a different obj
// 3. Check how the property is picked up from prototype chain (you should have a missing prop in orig object,
but it should be present in your prototype chain)
// 4. Use prototype effeciently. example of multiple objects with same function.
// 5. Declare the function on prototype, and remove it from individual objects. And then call the function
// Try some online examples also



// 30 mins everyday: ONLY CODING....Do not read....DO not use google help...
// create a new file everyday for this 30 mins coding practice
// and upload it to your github Everyday
// Name the file as date, example: 4May2023.js

// This will help with doubts, understanding and coding speed



// 10 may
Revise map, filter reduce
Revise html css basics
Understand Promises. Practice, practice, practice. And come up with doubts.




16 may
Create nested div like below, using plain JS
div
    <p>
    <div>
        <p>
        <div>
            <a>

Revise event listenserns
onCLick
onChange
focus
onDblClick
ondrag
and few more if you like
Create hyour react application
npx create-react-app
npm start
Try playing around with Babel tool


       






